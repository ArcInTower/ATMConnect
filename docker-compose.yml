version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: atmconnect-postgres
    environment:
      POSTGRES_DB: atmconnect
      POSTGRES_USER: atmconnect
      POSTGRES_PASSWORD: ${DB_PASSWORD:-atmconnect_dev_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atmconnect -d atmconnect"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - atmconnect-network

  redis:
    image: redis:7-alpine
    container_name: atmconnect-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-atmconnect_redis_dev}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - atmconnect-network

  atmconnect-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${DOCKER_TARGET:-development}
    container_name: atmconnect-app
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-postgresql}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: atmconnect
      DB_USERNAME: atmconnect
      DB_PASSWORD: ${DB_PASSWORD:-atmconnect_dev_password}
      DB_SCHEMA: public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-atmconnect_redis_dev}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-super-secret-jwt-key-for-development-only}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-900000}
      JWT_REFRESH_EXPIRATION_MS: ${JWT_REFRESH_EXPIRATION_MS:-86400000}
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    networks:
      - atmconnect-network
    profiles:
      - full

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  atmconnect-network:
    driver: bridge